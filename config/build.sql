SELECT datname
FROM pg_database;
-- CREATE DATABASE dboj;
DROP TABLE IF EXISTS QUESTION_BUILD;
DROP TABLE IF EXISTS QUESTION_DETAIL;
DROP TABLE IF EXISTS COMMIT_RESULT;
DROP TABLE IF EXISTS QUESTION;
DROP TABLE IF EXISTS COMMIT_LOG;
DROP TABLE IF EXISTS USER_TABLE;
CREATE TABLE USER_TABLE
(
    USER_ID    SERIAL PRIMARY KEY,
    USERNAME   TEXT UNIQUE NOT NULL,
    PASSWORD   TEXT        NOT NULL,
    USER_LEVEL INT         NOT NULL,
    EMALL      TEXT UNIQUE
);
insert into USER_TABLE (USERNAME, PASSWORD, USER_LEVEL, EMALL)
VALUES ('12345', '67890', 0, 'test@case.com');
CREATE TABLE COMMIT_LOG
(
    COMMIT_LOG_ID  SERIAL PRIMARY KEY,
    USER_ID        INT  NOT NULL REFERENCES USER_TABLE (USER_ID),
    QUESTION_ORDER INT  NOT NULL,
    COMMIT_CODE    TEXT NOT NULL,
    LANGUAGE       INT  NOT NULL,
    STATE          INT  NOT NULL
);

CREATE TABLE COMMIT_RESULT
(
    COMMIT_LOG_ID INT  NOT NULL REFERENCES COMMIT_LOG (COMMIT_LOG_ID),
    table_ORDER   INT  NOT NULL,
    COMMIT_RESULT TEXT NOT NULL,
    PRIMARY KEY (COMMIT_LOG_ID, table_ORDER, COMMIT_RESULT)
);

CREATE TABLE QUESTION
(
    PROGRAM_ORDER SERIAL PRIMARY KEY,
    NAME          TEXT    NOT NULL,
    DESCRIPTION   TEXT    NOT NULL,
    DEADLINE      INTEGER NOT NULL
);

CREATE TABLE QUESTION_DETAIL
(
    PROGRAM_ORDER  INT PRIMARY KEY NOT NULL REFERENCES QUESTION (PROGRAM_ORDER),
    CORRECT_SCRIPT TEXT            NOT NULL,
    LANGUAGE       INT             NOT NULL
);

CREATE TABLE QUESTION_BUILD
(
    QUESTION_TABLE_ORDER SERIAL PRIMARY KEY,
    PROGRAM_ORDER        INT  NOT NULL REFERENCES QUESTION (PROGRAM_ORDER),
    BUILD_SCRIPT         TEXT NOT NULl,
    LANGUAGE             INT  NOT NULL
);

select *
from user_table;